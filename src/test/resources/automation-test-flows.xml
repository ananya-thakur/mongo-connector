<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo"
    xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

	<context:property-placeholder location="${MONGO_CREDENTIALS}" />

	<mongo:config name="Mongo_DB" username="${mongo.username}" password="${mongo.password}" host="${mongo.host}" port="${mongo.port}"
		database="${mongo.database}" doc:name="Mongo DB" connectionsPerHost="4" maxWaitTime="5000">
		<mongo:connection-pooling-profile maxActive="2"
			initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_WAIT" maxWait="5000" />
	</mongo:config>
	
	<mongo:config name="Mongo_DB_for_drop_restore" username="${mongo.username}" password="${mongo.password}" host="${mongo.host.drop.restore}"
		port="${mongo.port.drop.restore}" database="${mongo.database.drop.restore}">
		<mongo:connection-pooling-profile
			initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW" />
	</mongo:config>

	<flow name="create-collection" doc:name="create-collection">
		<mongo:create-collection config-ref="Mongo_DB"
			collection="#[payload.collection]" doc:name="Mongo DB" />
	</flow>

	<flow name="save-object-for-drop-restore" doc:name="save-object">
		<mongo:save-object config-ref="Mongo_DB_for_drop_restore"
			collection="#[payload.collection]" element-ref="#[payload.elementRef]"
			writeConcern="#[payload.writeConcern]" />
	</flow>
	
	<flow name="drop-collection-for-drop-restore">
		<mongo:drop-collection config-ref="Mongo_DB_for_drop_restore"
			collection="#[payload.collection]" doc:name="Mongo DB" />
	</flow>

	<flow name="drop-collection" doc:name="drop-collection">
		<mongo:drop-collection config-ref="Mongo_DB"
			collection="#[payload.collection]" doc:name="Mongo DB" />
	</flow>

	<flow name="exists-collection" doc:name="collection-exists">
		<mongo:exists-collection config-ref="Mongo_DB"
			collection="#[payload.collection]" doc:name="Mongo_DB" />
	</flow>

	<flow name="exists-collection-for-drop-restore">
		<mongo:exists-collection config-ref="Mongo_DB_for_drop_restore"
			collection="#[payload.collection]" doc:name="Mongo_DB" />
	</flow>

	<flow name="list-collections" doc:name="list-collections">
		<mongo:list-collections config-ref="Mongo_DB" />
	</flow>

	<flow name="create-index" doc:name="create-index">
		<mongo:create-index config-ref="Mongo_DB"
			collection="#[payload.collection]" field="#[payload.field]" order="#[payload.order]" />
	</flow>

	<flow name="count-objects" doc:name="count-objects">
		<mongo:count-objects config-ref="Mongo_DB"
			collection="#[payload.collection]" query-ref="#[payload.queryRef]" />
	</flow>

	<flow name="count-objects-using-query-map-without-query" doc:name="count-objects-using-query-map-without-query">
		<mongo:count-objects-using-query-map
			config-ref="Mongo_DB" collection="#[payload.collection]" />
	</flow>

	<flow name="count-objects-using-query-map-with-query" doc:name="count-objects-using-query-map-with-query">
		<mongo:count-objects-using-query-map
			config-ref="Mongo_DB" collection="#[payload.collection]">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.queryAttribKey]">#[payload.queryAttribVal]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:count-objects-using-query-map>
	</flow>

	<flow name="create-file-from-payload" doc:name="create-file-from-payload">
		<mongo:create-file-from-payload
			config-ref="Mongo_DB" doc:name="Mongo DB" filename="#[sessionVars.filename]"
			metadata-ref="#[sessionVars.metaDataRef]" />
	</flow>

	<flow name="remove-files-using-query-map-empty-query">
		<mongo:remove-files-using-query-map
			config-ref="Mongo_DB" />
	</flow>

	<flow name="remove-files-using-query-map-non-empty-query">
		<mongo:remove-files-using-query-map
			config-ref="Mongo_DB">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.key]">#[payload.value]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:remove-files-using-query-map>
	</flow>

	<flow name="restore" doc:name="restore">
		<mongo:restore config-ref="Mongo_DB_for_drop_restore"
			inputPath="#[payload.inputPath]" drop="#[payload.drop]" oplogReplay="#[payload.oplogReplay]" />
	</flow>

	<flow name="drop-database">
		<mongo:drop-database config-ref="Mongo_DB_for_drop_restore" />
	</flow>

	<flow name="createIndex_Dump">
		<mongo:create-index collection="#[payload.collection]"
			field="#[payload.field]" order="#[payload.order]" config-ref="Mongo_DB_for_drop_restore" />
		<mongo:dump config-ref="Mongo_DB_for_drop_restore"
			outputDirectory="#[payload.outputDirectory]" outputName="#[payload.outputName]"
			zip="#[payload.zip]" oplog="#[payload.oplog]" threads="#[payload.threads]" />
	</flow>

	<flow name="find-files" doc:name="find-files">
		<mongo:find-files config-ref="Mongo_DB" />
	</flow>

	<flow name="find-files-using-query-map" doc:name="find-files-using-query-map">
		<mongo:find-files-using-query-map
			config-ref="Mongo_DB">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.queryAttribKey]">#[payload.queryAttribVal]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:find-files-using-query-map>
	</flow>

	<flow name="find-one-file" doc:name="find-one-file">
		<mongo:find-one-file config-ref="Mongo_DB"
			query-ref="#[payload.queryRef]" />
	</flow>

	<flow name="find-one-file-using-query-map" doc:name="find-one-file-using-query-map">
		<mongo:find-one-file-using-query-map
			config-ref="Mongo_DB">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.key]">#[payload.value]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:find-one-file-using-query-map>
	</flow>

	<flow name="dump" doc:name="dump">
		<mongo:dump config-ref="Mongo_DB" outputDirectory="#[payload.outputDirectory]"
			outputName="#[payload.outputName]" zip="#[payload.zip]" oplog="#[payload.oplog]"
			threads="#[payload.threads]" />
	</flow>

	<flow name="incremental-dump" doc:name="dump">
		<mongo:incremental-dump config-ref="Mongo_DB"
			outputDirectory="#[payload.outputDirectory]" />
	</flow>

	<flow name="list-files" doc:name="list-files">
		<mongo:list-files config-ref="Mongo_DB" query-ref="#[payload.queryRef]" />
	</flow>

	<flow name="list-files-using-query-map-empty-query" doc:name="list-files-using-query-map">
		<mongo:list-files-using-query-map
			config-ref="Mongo_DB" />
	</flow>

	<flow name="list-files-using-query-map-non-empty-query" doc:name="list-files-using-query-map">
		<mongo:list-files-using-query-map
			config-ref="Mongo_DB">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.key]">#[payload.value]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:list-files-using-query-map>
	</flow>

	<flow name="get-file-content" doc:name="getFileContent">
		<mongo:get-file-content config-ref="Mongo_DB"
			query-ref="#[payload.queryRef]" />
	</flow>

	<flow name="get-file-content-using-query-map" doc:name="getFileContentUsingQueryMap">
		<mongo:get-file-content-using-query-map
			config-ref="Mongo_DB" doc:name="Mongo DB">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.key]">#[payload.value]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:get-file-content-using-query-map>
	</flow>

	<!-- UNTESTED -->
	<flow name="drop-index" doc:name="drop-index">
		<mongo:drop-index config-ref="Mongo_DB" collection="#[payload.collection]"
			index="#[payload.index]" />
	</flow>

	<flow name="drop-index-for-drop-restore">
		<mongo:drop-index config-ref="Mongo_DB_for_drop_restore"
			collection="#[payload.collection]" index="#[payload.index]" />
	</flow>

	<flow name="list-indices" doc:name="list-indices">
		<mongo:list-indices config-ref="Mongo_DB"
			collection="#[payload.collection]" />
	</flow>

	<flow name="list-indices-for-drop-restore">
		<mongo:list-indices config-ref="Mongo_DB_for_drop_restore"
			collection="#[payload.collection]" />
	</flow>

	<flow name="insert-object" doc:name="insert-object">
		<mongo:insert-object config-ref="Mongo_DB"
			collection="#[payload.collection]" dbObject-ref="#[payload.dbObjectRef]" />
	</flow>

	<flow name="insert-object-from-map" doc:name="insert-object-from-map-with-elements">
		<mongo:insert-object-from-map config-ref="Mongo_DB"
			writeConcern="#[payload.writeConcern]" collection="#[payload.collection]">
			<mongo:element-attributes>
				<mongo:element-attribute key="#[payload.key]">#[payload.value]</mongo:element-attribute>
			</mongo:element-attributes>
		</mongo:insert-object-from-map>
	</flow>

	<flow name="remove-objects" doc:name="remove-objects">
		<mongo:remove-objects config-ref="Mongo_DB"
			collection="#[payload.collection]" query-ref="#[payload.queryRef]" />
	</flow>

	<flow name="remove-objects-using-query-map-with-query-map"
		doc:name="remove-objects-using-query-map-with-query-map">
		<mongo:remove-objects-using-query-map
			config-ref="Mongo_DB" collection="#[payload.collection]"
			writeConcern="#[payload.writeConcern]">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.key]">#[payload.value]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:remove-objects-using-query-map>
	</flow>

	<!-- THIS IS NOT SUPPORTED, WHEN IN FACT, IT SHOULD BE -->
	<flow name="remove-objects-using-query-map-without-query-map"
		doc:name="remove-objects-using-query-map-without-query-map">
		<mongo:remove-objects-using-query-map
			config-ref="Mongo_DB" collection="#[payload.collection]"
			writeConcern="#[payload.writeConcern]" />
	</flow>

	<flow name="find-objects" doc:name="find-objects">
		<mongo:find-objects config-ref="Mongo_DB"
			collection="#[payload.collection]" />
	</flow>

	<flow name="find-objects-using-query-map-without-query" doc:name="find-objects-using-query-map-without-query">
		<mongo:find-objects-using-query-map
			config-ref="Mongo_DB" collection="#[payload.collection]" />
	</flow>

	<flow name="find-objects-using-query-map-with-limit" doc:name="find-objects-using-query-map-without-query">
		<mongo:find-objects-using-query-map
			config-ref="Mongo_DB" limit="#[payload.limit]" collection="#[payload.collection]" />
	</flow>

	<flow name="find-objects-using-query-map-with-query" doc:name="find-objects-using-query-map-with-query">
		<mongo:find-objects-using-query-map
			config-ref="Mongo_DB" collection="#[payload.collection]">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.queryKey]">#[payload.queryValue]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:find-objects-using-query-map>
	</flow>

	<flow name="find-one-object" doc:name="find-one-object">
		<mongo:find-one-object config-ref="Mongo_DB"
			collection="#[payload.collection]" query-ref="#[payload.queryRef]" />
	</flow>

	<flow name="find-one-object-using-query-map" doc:name="find-one-object-using-query-map">
		<mongo:find-one-object-using-query-map
			config-ref="Mongo_DB" collection="#[payload.collection]">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.key]">#[payload.value]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:find-one-object-using-query-map>
	</flow>

	<flow name="save-object" doc:name="save-object">
		<mongo:save-object config-ref="Mongo_DB"
			collection="#[payload.collection]" element-ref="#[payload.elementRef]"
			writeConcern="#[payload.writeConcern]" />
	</flow>

	<flow name="save-object-from-map" doc:name="save-object-from-map">
		<mongo:save-object-from-map config-ref="Mongo_DB"
			collection="#[payload.collection]">
			<mongo:element-attributes>
				<mongo:element-attribute key="#[payload.key]">#[payload.value]</mongo:element-attribute>
			</mongo:element-attributes>
		</mongo:save-object-from-map>
	</flow>

	<flow name="add-user" doc:name="add-user">
		<mongo:add-user config-ref="Mongo_DB" newPassword="#[payload.newPassword]"
			newUsername="#[payload.newUsername]" />
	</flow>

	<flow name="execute-command" doc:name="execute-command">
		<mongo:execute-command config-ref="Mongo_DB"
			commandName="#[payload.commandName]" commandValue="#[payload.commandValue]" />
	</flow>

	<flow name="update-objects-single-object" doc:name="update-objects">
		<mongo:update-objects collection="#[payload.collection]"
			multi="false" config-ref="Mongo_DB" query-ref="#[payload.queryRef]"
			writeConcern="#[payload.writeConcern]" element-ref="#[payload.elementRef]" />
	</flow>

	<flow name="map-reduce-objects" doc:name="map-reduce-objects">
		<mongo:map-reduce-objects config-ref="Mongo_DB"
			collection="#[payload.collection]" mapFunction="#[payload.mapFunction]"
			reduceFunction="#[payload.reduceFunction]" outputCollection="#[payload.outputCollection]" />
	</flow>

	<flow name="update-objects-using-map" doc:name="update-objects-using-map">
		<mongo:update-objects-using-map
			collection="#[payload.collection]" config-ref="Mongo_DB"
			writeConcern="#[payload.writeConcern]">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.queryKey]">#[payload.queryValue]</mongo:query-attribute>
			</mongo:query-attributes>
			<mongo:element-attributes>
				<mongo:element-attribute key="#[payload.operator]">#[payload.dbObject]</mongo:element-attribute>
			</mongo:element-attributes>
		</mongo:update-objects-using-map>
	</flow>

	<flow name="update-objects-using-query-map">
		<mongo:update-objects-using-query-map
			config-ref="Mongo_DB" collection="#[payload.collection]"
			writeConcern="#[payload.writeConcern]" upsert="#[payload.upsert]"
			multi="#[payload.multi]" element-ref="#[payload.dbObject]">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.queryKey]">#[payload.queryValue]</mongo:query-attribute>
			</mongo:query-attributes>
		</mongo:update-objects-using-query-map>
	</flow>

	<flow name="update-objects-by-function">
		<mongo:update-objects-by-function
			config-ref="Mongo_DB" collection="#[payload.collection]" element-ref="#[payload.elementRef]"
			function="#[payload.function]" query-ref="#[payload.queryRef]"
			upsert="#[payload.upsert]" multi="#[payload.multi]" writeConcern="#[payload.writeConcern]">
		</mongo:update-objects-by-function>
	</flow>

	<flow name="update-objects-by-function-using-map">
		<mongo:update-objects-by-function-using-map
			config-ref="Mongo_DB" collection="#[payload.collection]" upsert="#[payload.upsert]"
			multi="#[payload.multi]" writeConcern="#[payload.writeConcern]"
			function="#[payload.function]">
			<mongo:query-attributes>
				<mongo:query-attribute key="#[payload.queryKey]">#[payload.queryValue]</mongo:query-attribute>
			</mongo:query-attributes>
			<mongo:element-attributes>
				<mongo:element-attribute key="#[payload.elementKey]">#[payload.elementValue]</mongo:element-attribute>
			</mongo:element-attributes>
		</mongo:update-objects-by-function-using-map>
	</flow>
    
    <flow name="count-open-connections">
        <mongo:execute-command commandName="serverStatus"
                config-ref="Mongo_DB"/>
        <set-payload value="#[json:connections/current]" />
    </flow>

</mule>
